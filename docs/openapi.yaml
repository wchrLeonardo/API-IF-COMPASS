openapi: 3.1.0
info:
  title: API IF COMPASS
  version: 1.0.0
  description: |
    API RESTful para gerenciamento banc√°rio desenvolvida para o desafio COMPASS.

    Esta API oferece funcionalidades completas para:
    - **Gest√£o de Clientes**: Cadastro, consulta, atualiza√ß√£o e exclus√£o
    - **Contas Banc√°rias**: Cria√ß√£o e gest√£o de contas
    - **Transa√ß√µes**: Registro e consulta de movimenta√ß√µes
    - **Consentimentos**: Gerenciamento de autoriza√ß√µes

    ## Funcionalidades

    - üè¶ Sistema banc√°rio completo
    - üìä Controle de transa√ß√µes
    - üë• Gest√£o de clientes
    - üîê Sistema de consentimentos
    - üìÑ Pagina√ß√£o autom√°tica
    - ‚ö° Respostas r√°pidas e otimizadas

    ## Tecnologias

    - Node.js + Express
    - MongoDB + Mongoose
    - Arquitetura MVC
    - Middlewares personalizados

    **Desenvolvido por:** Leonardo Ferreira  
    **Projeto:** COMPASS Challenge
  contact:
    name: Leonardo Ferreira
    email: leowlferreira@email.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Servidor de Desenvolvimento

tags:
  - name: Customers
    description: Opera√ß√µes relacionadas aos clientes
  - name: Accounts
    description: Opera√ß√µes relacionadas √†s contas banc√°rias
  - name: Transactions
    description: Opera√ß√µes relacionadas √†s transa√ß√µes
  - name: Consents
    description: Opera√ß√µes relacionadas aos consentimentos

paths:
  /customers:
    get:
      tags:
        - Customers
      summary: Listar clientes
      description: Retorna uma lista paginada de todos os clientes
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N√∫mero da p√°gina
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Itens por p√°gina
      responses:
        '200':
          description: Lista paginada de clientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersPaginated'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Customers
      summary: Criar cliente
      description: Cria um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Dados inv√°lidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /customers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID do cliente
        schema:
          type: string
    get:
      tags:
        - Customers
      summary: Obter cliente
      description: Retorna os detalhes de um cliente espec√≠fico
      responses:
        '200':
          description: Detalhes do cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Customers
      summary: Atualizar cliente
      description: Atualiza os dados de um cliente espec√≠fico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateRequest'
      responses:
        '200':
          description: Cliente atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Customers
      summary: Excluir cliente
      description: Remove um cliente espec√≠fico
      responses:
        '204':
          description: Cliente removido com sucesso
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/customers/{id_customer}:
    parameters:
      - name: id_customer
        in: path
        required: true
        description: ID do cliente
        schema:
          type: string
    post:
      tags:
        - Accounts
      summary: Criar conta
      description: Cria uma nova conta banc√°ria para um cliente espec√≠fico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: Conta criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Dados inv√°lidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Accounts
      summary: Listar contas do cliente
      description: Retorna todas as contas de um cliente espec√≠fico
      responses:
        '200':
          description: Lista de contas do cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID da conta
        schema:
          type: string
    get:
      tags:
        - Accounts
      summary: Obter conta
      description: Retorna os detalhes de uma conta espec√≠fica
      responses:
        '200':
          description: Detalhes da conta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Accounts
      summary: Excluir conta
      description: Remove uma conta espec√≠fica
      responses:
        '204':
          description: Conta removida com sucesso
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{id}/balance:
    parameters:
      - name: id
        in: path
        required: true
        description: ID da conta
        schema:
          type: string
    get:
      tags:
        - Accounts
      summary: Obter saldo
      description: Retorna o saldo atual da conta
      responses:
        '200':
          description: Saldo da conta
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    description: Saldo atual da conta
                    example: 1500.50
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{id_account}/aggregated-view:
    parameters:
      - name: id_account
        in: path
        required: true
        description: ID da conta
        schema:
          type: string
    get:
      tags:
        - Accounts
      summary: Vis√£o agregada
      description: Retorna uma vis√£o agregada da conta com todas as suas informa√ß√µes
      responses:
        '200':
          description: Vis√£o agregada da conta
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
                  owner:
                    $ref: '#/components/schemas/Customer'
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/accounts/{id_account}:
    parameters:
      - name: id_account
        in: path
        required: true
        description: ID da conta
        schema:
          type: string
    get:
      tags:
        - Transactions
      summary: Listar transa√ß√µes da conta
      description: Retorna todas as transa√ß√µes de uma conta espec√≠fica
      responses:
        '200':
          description: Lista de transa√ß√µes da conta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Transactions
      summary: Criar transa√ß√£o
      description: Cria uma nova transa√ß√£o para uma conta espec√≠fica
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Transa√ß√£o criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Dados inv√°lidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID da transa√ß√£o
        schema:
          type: string
    get:
      tags:
        - Transactions
      summary: Obter transa√ß√£o
      description: Retorna os detalhes de uma transa√ß√£o espec√≠fica
      responses:
        '200':
          description: Detalhes da transa√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transa√ß√£o n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consents:
    post:
      tags:
        - Consents
      summary: Criar consentimento
      description: Cria um novo consentimento para acesso aos dados
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
      responses:
        '201':
          description: Consentimento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
        '400':
          description: Dados inv√°lidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Cliente ou conta n√£o encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consents/customer/{id_customer}:
    parameters:
      - name: id_customer
        in: path
        required: true
        description: ID do cliente
        schema:
          type: string
    get:
      tags:
        - Consents
      summary: Listar consentimentos do cliente
      description: Retorna todos os consentimentos de um cliente espec√≠fico
      responses:
        '200':
          description: Lista de consentimentos do cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consent'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consents/customer/{id_customer}/revoke-all:
    parameters:
      - name: id_customer
        in: path
        required: true
        description: ID do cliente
        schema:
          type: string
    patch:
      tags:
        - Consents
      summary: Revogar todos os consentimentos do cliente
      description: Revoga todos os consentimentos ativos de um cliente espec√≠fico
      responses:
        '204':
          description: Todos os consentimentos foram revogados com sucesso
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consents/{id}/customer/{id_customer}/revoke:
    parameters:
      - name: id
        in: path
        required: true
        description: ID do consentimento
        schema:
          type: string
      - name: id_customer
        in: path
        required: true
        description: ID do cliente
        schema:
          type: string
    patch:
      tags:
        - Consents
      summary: Revogar consentimento espec√≠fico
      description: Revoga um consentimento espec√≠fico de um cliente
      responses:
        '204':
          description: Consentimento revogado com sucesso
        '404':
          description: Consentimento ou cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consents/account/{id_account}:
    parameters:
      - name: id_account
        in: path
        required: true
        description: ID da conta
        schema:
          type: string
    get:
      tags:
        - Consents
      summary: Obter consentimento da conta
      description: Retorna o consentimento ativo para uma conta espec√≠fica
      responses:
        '200':
          description: Consentimento da conta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
        '404':
          description: Conta n√£o encontrada ou sem consentimento ativo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Customer:
      type: object
      required:
        - name
        - cpf
        - email
      properties:
        id:
          type: string
          description: ID √∫nico do cliente (auto-gerado)
          example: "cus_001"
          readOnly: true
        name:
          type: string
          description: Nome completo do cliente
          example: "Jo√£o Silva Santos"
          minLength: 2
          maxLength: 100
        cpf:
          type: string
          description: CPF do cliente (somente n√∫meros)
          example: "12345678901"
          pattern: '^[0-9]{11}$'
        email:
          type: string
          format: email
          description: Email √∫nico do cliente
          example: "joao.silva@email.com"
        accounts:
          type: array
          description: Lista de contas associadas ao cliente
          items:
            type: string
          example: ["acc_001", "acc_002"]
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o do registro
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    CustomerRequest:
      type: object
      required:
        - name
        - cpf
        - email
      properties:
        name:
          type: string
          description: Nome completo do cliente
          example: "Jo√£o Silva Santos"
          minLength: 2
          maxLength: 100
        cpf:
          type: string
          description: CPF do cliente (somente n√∫meros)
          example: "12345678901"
          pattern: '^[0-9]{11}$'
        email:
          type: string
          format: email
          description: Email √∫nico do cliente
          example: "joao.silva@email.com"

    CustomerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Nome completo do cliente
          example: "Jo√£o Silva Santos"
          minLength: 2
          maxLength: 100
        cpf:
          type: string
          description: CPF do cliente (somente n√∫meros)
          example: "12345678901"
          pattern: '^[0-9]{11}$'
        email:
          type: string
          format: email
          description: Email √∫nico do cliente
          example: "joao.silva@email.com"

    CustomersPaginated:
      type: object
      properties:
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: Lista de clientes na p√°gina atual
        totalDocs:
          type: integer
          description: Total de documentos encontrados
          example: 150
        limit:
          type: integer
          description: N√∫mero m√°ximo de itens por p√°gina
          example: 10
        totalPages:
          type: integer
          description: Total de p√°ginas
          example: 15
        page:
          type: integer
          description: P√°gina atual
          example: 1
        pagingCounter:
          type: integer
          description: Contador sequencial da pagina√ß√£o
          example: 1
        hasPrevPage:
          type: boolean
          description: Indica se h√° p√°gina anterior
          example: false
        hasNextPage:
          type: boolean
          description: Indica se h√° pr√≥xima p√°gina
          example: true
        prevPage:
          type: integer
          nullable: true
          description: N√∫mero da p√°gina anterior
          example: null
        nextPage:
          type: integer
          nullable: true
          description: N√∫mero da pr√≥xima p√°gina
          example: 2

    Account:
      type: object
      required:
        - type
        - branch
        - number
        - owner
      properties:
        id:
          type: string
          description: ID √∫nico da conta (auto-gerado)
          example: "acc_001"
          readOnly: true
        type:
          type: string
          description: Tipo da conta banc√°ria
          enum: ['checking', 'savings']
          example: "checking"
        branch:
          type: string
          description: Ag√™ncia da conta
          example: "1234"
        number:
          type: string
          description: N√∫mero √∫nico da conta
          example: "567890"
        balance:
          type: number
          description: Saldo atual da conta
          example: 1500.50
          default: 0
          readOnly: true
        owner:
          type: string
          description: ID do cliente propriet√°rio da conta
          example: "cus_001"
        transactions:
          type: array
          description: Lista de transa√ß√µes da conta
          items:
            type: string
          example: ["txn_001", "txn_002"]
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o da conta
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    AccountRequest:
      type: object
      required:
        - type
        - branch
        - number
        - owner
      properties:
        type:
          type: string
          description: Tipo da conta banc√°ria
          enum: ['checking', 'savings']
          example: "checking"
        branch:
          type: string
          description: Ag√™ncia da conta
          example: "1234"
        number:
          type: string
          description: N√∫mero √∫nico da conta
          example: "567890"
        owner:
          type: string
          description: ID do cliente propriet√°rio da conta
          example: "cus_001"

    Transaction:
      type: object
      required:
        - amount
        - type
        - description
        - account
      properties:
        id:
          type: string
          description: ID √∫nico da transa√ß√£o (auto-gerado)
          example: "txn_001"
          readOnly: true
        amount:
          type: number
          description: Valor da transa√ß√£o
          example: 250.75
          minimum: 0.01
        type:
          type: string
          description: Tipo da transa√ß√£o
          enum: ['credit', 'debit']
          example: "credit"
        description:
          type: string
          description: Descri√ß√£o da transa√ß√£o
          example: "Dep√≥sito"
          minLength: 1
          maxLength: 200
        category:
          type: string
          description: Categoria da transa√ß√£o
          example: "payment"
          nullable: true
        account:
          type: string
          description: ID da conta associada √† transa√ß√£o
          example: "acc_001"
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o da transa√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    TransactionRequest:
      type: object
      required:
        - amount
        - type
        - description
      properties:
        amount:
          type: number
          description: Valor da transa√ß√£o
          example: 250.75
          minimum: 0.01
        type:
          type: string
          description: Tipo da transa√ß√£o
          enum: ['credit', 'debit']
          example: "credit"
        description:
          type: string
          description: Descri√ß√£o da transa√ß√£o
          example: "Dep√≥sito"
          minLength: 1
          maxLength: 200
        category:
          type: string
          description: Categoria da transa√ß√£o
          example: "payment"
          nullable: true

    Consent:
      type: object
      required:
        - account
        - owner
        - permissions
      properties:
        id:
          type: string
          description: ID √∫nico do consentimento (auto-gerado)
          example: "con_001"
          readOnly: true
        account:
          type: string
          description: ID da conta associada ao consentimento
          example: "acc_001"
        owner:
          type: string
          description: ID do cliente propriet√°rio do consentimento
          example: "cus_001"
        permissions:
          type: array
          description: Lista de permiss√µes concedidas
          items:
            type: string
            enum: ['read', 'write']
          example: ["read", "write"]
        status:
          type: string
          description: Status do consentimento
          enum: ['active', 'revoked']
          example: "active"
          default: "active"
          readOnly: true
        revokedAt:
          type: string
          format: date-time
          description: Data de revoga√ß√£o do consentimento
          example: "2024-01-15T10:30:00Z"
          nullable: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o do consentimento
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    ConsentRequest:
      type: object
      required:
        - account
        - owner
        - permissions
      properties:
        account:
          type: string
          description: ID da conta associada ao consentimento
          example: "acc_001"
        owner:
          type: string
          description: ID do cliente propriet√°rio do consentimento
          example: "cus_001"
        permissions:
          type: array
          description: Lista de permiss√µes concedidas
          items:
            type: string
            enum: ['read', 'write']
          example: ["read", "write"]

    Error:
      type: object
      properties:
        message:
          type: string
          description: Mensagem de erro
          example: "Erro ao processar a requisi√ß√£o"
        details:
          type: object
          description: Detalhes adicionais do erro
          additionalProperties: true
          example: { "field": "email", "error": "Email j√° cadastrado" }