openapi: 3.1.0
info:
  title: API IF COMPASS
  version: 1.0.0
  description: |
    API RESTful para gerenciamento banc√°rio desenvolvida para o desafio COMPASS.
    
    Esta API oferece funcionalidades completas para:
    - **Gest√£o de Clientes**: Cadastro, consulta, atualiza√ß√£o e exclus√£o
    - **Contas Banc√°rias**: Cria√ß√£o e gest√£o de contas
    - **Transa√ß√µes**: Registro e consulta de movimenta√ß√µes
    - **Consentimentos**: Gerenciamento de autoriza√ß√µes
    
    ## Funcionalidades
    
    - üè¶ Sistema banc√°rio completo
    - üìä Controle de transa√ß√µes
    - üë• Gest√£o de clientes
    - üîê Sistema de consentimentos
    - üìÑ Pagina√ß√£o autom√°tica
    - ‚ö° Respostas r√°pidas e otimizadas
    
    ## Tecnologias
    
    - Node.js + Express
    - MongoDB + Mongoose
    - Arquitetura MVC
    - Middlewares personalizados
    
    **Desenvolvido por:** Leonardo Ferreira  
    **Projeto:** COMPASS Challenge
  contact:
    name: Leonardo Ferreira
    email: leowlferreira@email.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Servidor de Desenvolvimento

tags:
  - name: Customers
    description: Opera√ß√µes relacionadas aos clientes
  - name: Accounts
    description: Opera√ß√µes relacionadas √†s contas banc√°rias
  - name: Transactions
    description: Opera√ß√µes relacionadas √†s transa√ß√µes
  - name: Consents
    description: Opera√ß√µes relacionadas aos consentimentos

components:
  schemas:
    # ===== CUSTOMER SCHEMAS =====
    Customer:
      type: object
      required:
        - name
        - cpf
        - email
      properties:
        id:
          type: string
          description: ID √∫nico do cliente (auto-gerado)
          example: "cus_001"
          readOnly: true
        name:
          type: string
          description: Nome completo do cliente
          example: "Jo√£o Silva Santos"
          minLength: 2
          maxLength: 100
        cpf:
          type: string
          description: CPF do cliente (somente n√∫meros)
          example: "12345678901"
          pattern: '^[0-9]{11}$'
        email:
          type: string
          format: email
          description: Email √∫nico do cliente
          example: "joao.silva@email.com"
        accounts:
          type: array
          description: Lista de contas associadas ao cliente
          items:
            type: string
          example: ["acc_001", "acc_002"]
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o do registro
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    CustomerRequest:
      type: object
      required:
        - name
        - cpf
        - email
      properties:
        name:
          type: string
          description: Nome completo do cliente
          example: "Jo√£o Silva Santos"
          minLength: 2
          maxLength: 100
        cpf:
          type: string
          description: CPF do cliente (somente n√∫meros)
          example: "12345678901"
          pattern: '^[0-9]{11}$'
        email:
          type: string
          format: email
          description: Email √∫nico do cliente
          example: "joao.silva@email.com"

    CustomerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Nome completo do cliente
          example: "Jo√£o Silva Santos"
          minLength: 2
          maxLength: 100
        cpf:
          type: string
          description: CPF do cliente (somente n√∫meros)
          example: "12345678901"
          pattern: '^[0-9]{11}$'
        email:
          type: string
          format: email
          description: Email √∫nico do cliente
          example: "joao.silva@email.com"

    CustomersPaginated:
      type: object
      properties:
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: Lista de clientes na p√°gina atual
        totalDocs:
          type: integer
          description: Total de documentos encontrados
          example: 150
        limit:
          type: integer
          description: N√∫mero m√°ximo de itens por p√°gina
          example: 10
        totalPages:
          type: integer
          description: Total de p√°ginas
          example: 15
        page:
          type: integer
          description: P√°gina atual
          example: 1
        pagingCounter:
          type: integer
          description: Contador sequencial da pagina√ß√£o
          example: 1
        hasPrevPage:
          type: boolean
          description: Indica se h√° p√°gina anterior
          example: false
        hasNextPage:
          type: boolean
          description: Indica se h√° pr√≥xima p√°gina
          example: true
        prevPage:
          type: integer
          nullable: true
          description: N√∫mero da p√°gina anterior
          example: null
        nextPage:
          type: integer
          nullable: true
          description: N√∫mero da pr√≥xima p√°gina
          example: 2

    # ===== ACCOUNT SCHEMAS =====
    Account:
      type: object
      required:
        - type
        - branch
        - number
        - owner
      properties:
        id:
          type: string
          description: ID √∫nico da conta (auto-gerado)
          example: "acc_001"
          readOnly: true
        type:
          type: string
          description: Tipo da conta banc√°ria
          enum: ['checking', 'savings']
          example: "checking"
        branch:
          type: string
          description: Ag√™ncia da conta
          example: "1234"
        number:
          type: string
          description: N√∫mero √∫nico da conta
          example: "567890"
        balance:
          type: number
          description: Saldo atual da conta
          example: 1500.50
          default: 0
          readOnly: true
        owner:
          type: string
          description: ID do cliente propriet√°rio da conta
          example: "cus_001"
        transactions:
          type: array
          description: Lista de transa√ß√µes da conta
          items:
            type: string
          example: ["txn_001", "txn_002"]
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o da conta
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    AccountRequest:
      type: object
      required:
        - type
        - branch
        - number
      properties:
        type:
          type: string
          description: Tipo da conta banc√°ria
          enum: ['checking', 'savings']
          example: "checking"
        branch:
          type: string
          description: Ag√™ncia da conta
          example: "1234"
        number:
          type: string
          description: N√∫mero √∫nico da conta
          example: "567890"

    # ===== TRANSACTION SCHEMAS =====
    Transaction:
      type: object
      required:
        - amount
        - type
        - description
        - account
      properties:
        id:
          type: string
          description: ID √∫nico da transa√ß√£o (auto-gerado)
          example: "txn_001"
          readOnly: true
        amount:
          type: number
          description: Valor da transa√ß√£o
          example: 250.75
          minimum: 0.01
        type:
          type: string
          description: Tipo da transa√ß√£o
          enum: ['credit', 'debit']
          example: "credit"
        description:
          type: string
          description: Descri√ß√£o da transa√ß√£o
          example: "Dep√≥sito via PIX"
          maxLength: 255
        category:
          type: string
          description: Categoria da transa√ß√£o (opcional)
          example: "Transfer√™ncia"
          maxLength: 100
        account:
          type: string
          description: ID da conta associada √† transa√ß√£o
          example: "acc_001"
        createdAt:
          type: string
          format: date-time
          description: Data e hora da transa√ß√£o
          example: "2024-01-15T14:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T14:30:00Z"
          readOnly: true

    TransactionRequest:
      type: object
      required:
        - amount
        - type
        - description
      properties:
        amount:
          type: number
          description: Valor da transa√ß√£o
          example: 250.75
          minimum: 0.01
        type:
          type: string
          description: Tipo da transa√ß√£o
          enum: ['credit', 'debit']
          example: "credit"
        description:
          type: string
          description: Descri√ß√£o da transa√ß√£o
          example: "Dep√≥sito via PIX"
          maxLength: 255
        category:
          type: string
          description: Categoria da transa√ß√£o (opcional)
          example: "Transfer√™ncia"
          maxLength: 100

    TransactionsPaginated:
      type: object
      properties:
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: Lista de transa√ß√µes na p√°gina atual
        totalDocs:
          type: integer
          description: Total de documentos encontrados
          example: 200
        limit:
          type: integer
          description: N√∫mero m√°ximo de itens por p√°gina
          example: 10
        totalPages:
          type: integer
          description: Total de p√°ginas
          example: 20
        page:
          type: integer
          description: P√°gina atual
          example: 1
        pagingCounter:
          type: integer
          description: Contador sequencial da pagina√ß√£o
          example: 1
        hasPrevPage:
          type: boolean
          description: Indica se h√° p√°gina anterior
          example: false
        hasNextPage:
          type: boolean
          description: Indica se h√° pr√≥xima p√°gina
          example: true
        prevPage:
          type: integer
          nullable: true
          description: N√∫mero da p√°gina anterior
          example: null
        nextPage:
          type: integer
          nullable: true
          description: N√∫mero da pr√≥xima p√°gina
          example: 2

    # ===== CONSENT SCHEMAS =====
    Consent:
      type: object
      required:
        - customer
        - permissions
        - currentAccount
      properties:
        id:
          type: string
          description: ID √∫nico do consentimento (auto-gerado)
          example: "con_001"
          readOnly: true
        customer:
          type: string
          description: ID do cliente que concede o consentimento
          example: "cus_001"
        status:
          type: string
          description: Status atual do consentimento
          enum: ['AUTHORIZED', 'REVOKED', 'UNAUTHORIZED']
          example: "AUTHORIZED"
          default: "UNAUTHORIZED"
        permissions:
          type: array
          description: Lista de permiss√µes concedidas
          items:
            type: string
            enum: ['ACCOUNTS_READ', 'BALANCES_READ', 'TRANSACTIONS_READ']
          example: ["ACCOUNTS_READ", "BALANCES_READ"]
          minItems: 1
        expirationDateTime:
          type: string
          format: date-time
          description: Data e hora de expira√ß√£o do consentimento
          example: "2025-01-15T10:30:00Z"
        currentAccount:
          type: string
          description: ID da conta principal do consentimento
          example: "acc_001"
        sourceAccounts:
          type: array
          description: Lista de contas de origem autorizadas
          items:
            type: string
          example: ["acc_001", "acc_002"]
        createdAt:
          type: string
          format: date-time
          description: Data de cria√ß√£o do consentimento
          example: "2024-01-15T10:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Data da √∫ltima atualiza√ß√£o
          example: "2024-01-15T10:30:00Z"
          readOnly: true

    ConsentRequest:
      type: object
      required:
        - customer
        - permissions
        - currentAccount
      properties:
        customer:
          type: string
          description: ID do cliente que concede o consentimento
          example: "cus_001"
        permissions:
          type: array
          description: Lista de permiss√µes solicitadas
          items:
            type: string
            enum: ['ACCOUNTS_READ', 'BALANCES_READ', 'TRANSACTIONS_READ']
          example: ["ACCOUNTS_READ", "BALANCES_READ"]
          minItems: 1
        currentAccount:
          type: string
          description: ID da conta principal do consentimento
          example: "acc_001"
        sourceAccounts:
          type: array
          description: Lista de contas de origem (opcional)
          items:
            type: string
          example: ["acc_001", "acc_002"]
        expirationDateTime:
          type: string
          format: date-time
          description: Data de expira√ß√£o customizada (opcional)
          example: "2025-06-15T10:30:00Z"

    # ===== COMMON SCHEMAS =====
    Error:
      type: object
      properties:
        message:
          type: string
          description: Mensagem de erro
          example: "Recurso n√£o encontrado"
        status:
          type: integer
          description: C√≥digo de status HTTP
          example: 404

    ValidationError:
      type: object
      properties:
        message:
          type: string
          description: Mensagem de erro de valida√ß√£o
          example: "Dados obrigat√≥rios n√£o fornecidos"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "email"
              message:
                type: string
                example: "Email √© obrigat√≥rio"

  responses:
    BadRequest:
      description: Requisi√ß√£o inv√°lida - dados obrigat√≥rios n√£o fornecidos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    NotFound:
      description: Recurso n√£o encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Erro interno do servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

paths:
  # ===== CUSTOMERS ENDPOINTS =====
  /customers:
    post:
      tags: [Customers]
      summary: Criar um novo cliente
      description: |
        Cria um novo cliente no sistema banc√°rio.
        
        **Valida√ß√µes:**
        - Nome √© obrigat√≥rio (2-100 caracteres)
        - CPF √© obrigat√≥rio e deve ser √∫nico (11 d√≠gitos)
        - Email √© obrigat√≥rio e deve ser √∫nico
        
        **Funcionalidades:**
        - ID √© gerado automaticamente no formato "cus_XXX"
        - Timestamps s√£o adicionados automaticamente
        - CPF e email devem ser √∫nicos no sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
            examples:
              exemplo1:
                summary: Cliente pessoa f√≠sica
                value:
                  name: "Maria Santos Silva"
                  cpf: "12345678901"
                  email: "maria.santos@email.com"
              exemplo2:
                summary: Cliente jovem
                value:
                  name: "Pedro Oliveira"
                  cpf: "98765432109"
                  email: "pedro.oliveira@gmail.com"
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: CPF ou email j√° existem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "CPF j√° cadastrado no sistema"
                status: 409
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags: [Customers]
      summary: Listar todos os clientes
      description: |
        Retorna uma lista paginada de todos os clientes cadastrados.
        
        **Funcionalidades:**
        - Suporte √† pagina√ß√£o autom√°tica
        - Ordena√ß√£o por data de cria√ß√£o (mais recentes primeiro)
        - Informa√ß√µes completas de pagina√ß√£o inclu√≠das
        - Popula√ß√£o autom√°tica das contas associadas
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N√∫mero da p√°gina desejada
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: N√∫mero de itens por p√°gina
          example: 10
      responses:
        '200':
          description: Lista de clientes recuperada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersPaginated'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /customers/{id}:
    get:
      tags: [Customers]
      summary: Buscar cliente por ID
      description: |
        Retorna os dados completos de um cliente espec√≠fico pelo ID.
        
        **Funcionalidades:**
        - Busca pelo ID customizado (formato: cus_XXX)
        - Popula√ß√£o autom√°tica das contas associadas
        - Retorno de dados completos incluindo timestamps
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^cus_[0-9]{3}$'
          description: ID √∫nico do cliente
          example: "cus_001"
      responses:
        '200':
          description: Cliente encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags: [Customers]
      summary: Atualizar dados do cliente
      description: |
        Atualiza os dados de um cliente espec√≠fico.
        
        **Valida√ß√µes:**
        - Pelo menos um campo deve ser fornecido
        - CPF e email devem continuar √∫nicos se alterados
        - Nome deve ter entre 2-100 caracteres se fornecido
        - CPF deve ter 11 d√≠gitos se fornecido
        
        **Funcionalidades:**
        - Atualiza√ß√£o parcial (apenas campos fornecidos)
        - Valida√ß√£o de unicidade para CPF e email
        - Timestamp de atualiza√ß√£o autom√°tico
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^cus_[0-9]{3}$'
          description: ID √∫nico do cliente
          example: "cus_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateRequest'
            examples:
              atualizarNome:
                summary: Atualizar apenas o nome
                value:
                  name: "Maria Santos Silva Oliveira"
              atualizarEmail:
                summary: Atualizar apenas o email
                value:
                  email: "maria.oliveira@newemail.com"
              atualizarCompleto:
                summary: Atualizar todos os dados
                value:
                  name: "Maria Santos Silva Oliveira"
                  cpf: "11122233344"
                  email: "maria.oliveira@newemail.com"
      responses:
        '200':
          description: Cliente atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: CPF ou email j√° existem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Email j√° cadastrado para outro cliente"
                status: 409
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags: [Customers]
      summary: Excluir cliente
      description: |
        Remove um cliente do sistema permanentemente.
        
        **‚ö†Ô∏è ATEN√á√ÉO:**
        - Esta opera√ß√£o √© **irrevers√≠vel**
        - Todos os dados do cliente ser√£o perdidos
        - Contas associadas podem ser afetadas
        
        **Funcionalidades:**
        - Remo√ß√£o completa do registro
        - Verifica√ß√£o de exist√™ncia antes da exclus√£o
        - Limpeza de refer√™ncias relacionadas
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^cus_[0-9]{3}$'
          description: ID √∫nico do cliente a ser exclu√≠do
          example: "cus_001"
      responses:
        '200':
          description: Cliente exclu√≠do com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cliente exclu√≠do com sucesso"
                  deletedCustomer:
                    $ref: '#/components/schemas/Customer'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ===== ACCOUNTS ENDPOINTS =====
  /accounts/customers/{id_customer}:
    post:
      tags: [Accounts]
      summary: Criar uma nova conta para um cliente
      description: |
        Cria uma nova conta banc√°ria associada a um cliente espec√≠fico.
        
        **Valida√ß√µes:**
        - Cliente deve existir no sistema
        - Tipo de conta deve ser 'checking' ou 'savings'
        - N√∫mero da conta deve ser √∫nico
        - Ag√™ncia √© obrigat√≥ria
        
        **Funcionalidades:**
        - ID √© gerado automaticamente no formato "acc_XXX"
        - Saldo inicial √© 0
        - Conta √© automaticamente associada ao cliente
      parameters:
        - in: path
          name: id_customer
          required: true
          schema:
            type: string
            pattern: '^cus_[0-9]{3}$'
          description: ID do cliente propriet√°rio da conta
          example: "cus_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
            examples:
              contaCorrente:
                summary: Conta corrente
                value:
                  type: "checking"
                  branch: "1234"
                  number: "567890"
              contaPoupanca:
                summary: Conta poupan√ßa
                value:
                  type: "savings"
                  branch: "5678"
                  number: "123456"
      responses:
        '201':
          description: Conta criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Cliente n√£o encontrado"
                status: 404
        '409':
          description: N√∫mero da conta j√° existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "N√∫mero da conta j√° existe"
                status: 409
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags: [Accounts]
      summary: Listar contas de um cliente
      description: |
        Retorna todas as contas banc√°rias de um cliente espec√≠fico.
        
        **Funcionalidades:**
        - Lista todas as contas do cliente
        - Inclui informa√ß√µes de saldo e transa√ß√µes
        - Ordena√ß√£o por data de cria√ß√£o
      parameters:
        - in: path
          name: id_customer
          required: true
          schema:
            type: string
            pattern: '^cus_[0-9]{3}$'
          description: ID do cliente
          example: "cus_001"
      responses:
        '200':
          description: Lista de contas recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '404':
          description: Cliente n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{id}:
    get:
      tags: [Accounts]
      summary: Buscar conta por ID
      description: |
        Retorna os dados completos de uma conta espec√≠fica pelo ID.
        
        **Funcionalidades:**
        - Busca pelo ID customizado (formato: acc_XXX)
        - Inclui informa√ß√µes do propriet√°rio
        - Inclui lista de transa√ß√µes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^acc_[0-9]{3}$'
          description: ID √∫nico da conta
          example: "acc_001"
      responses:
        '200':
          description: Conta encontrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags: [Accounts]
      summary: Excluir conta
      description: |
        Remove uma conta banc√°ria do sistema permanentemente.
        
        **‚ö†Ô∏è ATEN√á√ÉO:**
        - Esta opera√ß√£o √© **irrevers√≠vel**
        - Todas as transa√ß√µes da conta ser√£o perdidas
        - Conta deve ter saldo zero para ser exclu√≠da
        
        **Funcionalidades:**
        - Verifica√ß√£o de saldo antes da exclus√£o
        - Remo√ß√£o de refer√™ncias do cliente
        - Limpeza de dados relacionados
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^acc_[0-9]{3}$'
          description: ID √∫nico da conta a ser exclu√≠da
          example: "acc_001"
      responses:
        '200':
          description: Conta exclu√≠da com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Conta exclu√≠da com sucesso"
                  deletedAccount:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Conta possui saldo ou transa√ß√µes pendentes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "N√£o √© poss√≠vel excluir conta com saldo"
                status: 400
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{id}/balance:
    get:
      tags: [Accounts]
      summary: Consultar saldo da conta
      description: |
        Retorna o saldo atual de uma conta espec√≠fica.
        
        **Funcionalidades:**
        - Consulta r√°pida de saldo
        - Informa√ß√µes de √∫ltima atualiza√ß√£o
        - Dados b√°sicos da conta
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^acc_[0-9]{3}$'
          description: ID √∫nico da conta
          example: "acc_001"
      responses:
        '200':
          description: Saldo consultado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: string
                    example: "acc_001"
                  balance:
                    type: number
                    example: 1500.75
                  currency:
                    type: string
                    example: "BRL"
                  lastUpdated:
                    type: string
                    format: date-time
                    example: "2024-01-15T14:30:00Z"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /accounts/{id_account}/aggregated-view:
    get:
      tags: [Accounts]
      summary: Vis√£o agregada da conta
      description: |
        Retorna uma vis√£o completa da conta com estat√≠sticas e resumos.
        
        **Funcionalidades:**
        - Informa√ß√µes completas da conta
        - Estat√≠sticas de transa√ß√µes
        - Resumo financeiro
        - √öltimas movimenta√ß√µes
      parameters:
        - in: path
          name: id_account
          required: true
          schema:
            type: string
            pattern: '^acc_[0-9]{3}$'
          description: ID √∫nico da conta
          example: "acc_001"
      responses:
        '200':
          description: Vis√£o agregada recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
                  statistics:
                    type: object
                    properties:
                      totalTransactions:
                        type: integer
                        example: 25
                      totalCredits:
                        type: number
                        example: 5000.00
                      totalDebits:
                        type: number
                        example: 3500.00
                      averageTransaction:
                        type: number
                        example: 150.75
                  recentTransactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                    description: √öltimas 5 transa√ß√µes
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ===== TRANSACTIONS ENDPOINTS =====
  /transactions/accounts/{id_account}:
    post:
      tags: [Transactions]
      summary: Criar uma nova transa√ß√£o
      description: |
        Registra uma nova transa√ß√£o em uma conta espec√≠fica.
        
        **Valida√ß√µes:**
        - Conta deve existir no sistema
        - Valor deve ser maior que zero
        - Tipo deve ser 'credit' ou 'debit'
        - Descri√ß√£o √© obrigat√≥ria
        
        **Funcionalidades:**
        - ID √© gerado automaticamente no formato "txn_XXX"
        - Saldo da conta √© atualizado automaticamente
        - Timestamp da transa√ß√£o √© registrado
      parameters:
        - in: path
          name: id_account
          required: true
          schema:
            type: string
            pattern: '^acc_[0-9]{3}$'
          description: ID da conta para a transa√ß√£o
          example: "acc_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
            examples:
              deposito:
                summary: Dep√≥sito na conta
                value:
                  amount: 500.00
                  type: "credit"
                  description: "Dep√≥sito via PIX"
                  category: "Transfer√™ncia"
              saque:
                summary: Saque da conta
                value:
                  amount: 200.00
                  type: "debit"
                  description: "Saque no caixa eletr√¥nico"
                  category: "Saque"
      responses:
        '201':
          description: Transa√ß√£o criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Saldo insuficiente para d√©bito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Saldo insuficiente para realizar a transa√ß√£o"
                status: 422
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags: [Transactions]
      summary: Listar transa√ß√µes de uma conta
      description: |
        Retorna uma lista paginada de transa√ß√µes de uma conta espec√≠fica.
        
        **Funcionalidades:**
        - Suporte √† pagina√ß√£o autom√°tica
        - Ordena√ß√£o por data (mais recentes primeiro)
        - Filtros por tipo e per√≠odo
        - Informa√ß√µes completas de cada transa√ß√£o
      parameters:
        - in: path
          name: id_account
          required: true
          schema:
            type: string
            pattern: '^acc_[0-9]{3}$'
          description: ID da conta
          example: "acc_001"
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N√∫mero da p√°gina desejada
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: N√∫mero de itens por p√°gina
          example: 10
      responses:
        '200':
          description: Lista de transa√ß√µes recuperada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsPaginated'
        '404':
          description: Conta n√£o encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions/{id}:
    get:
      tags: [Transactions]
      summary: Buscar transa√ß√£o por ID
      description: |
        Retorna os dados completos de uma transa√ß√£o espec√≠fica pelo ID.
        
        **Funcionalidades:**
        - Busca pelo ID customizado (formato: txn_XXX)
        - Inclui informa√ß√µes da conta associada
        - Detalhes completos da movimenta√ß√£o
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^txn_[0-9]{3}$'
          description: ID √∫nico da transa√ß√£o
          example: "txn_001"
      responses:
        '200':
          description: Transa√ß√£o encontrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ===== CONSENTS ENDPOINTS =====
  /consents:
    post:
      tags: [Consents]
      summary: Criar um novo consentimento
      description: |
        Cria um novo consentimento para acesso √†s informa√ß√µes de um cliente.
        
        **Valida√ß√µes:**
        - Cliente deve existir no sistema
        - Conta atual deve existir e pertencer ao cliente
        - Pelo menos uma permiss√£o deve ser especificada
        - Contas de origem devem pertencer ao cliente
        
        **Funcionalidades:**
        - ID √© gerado automaticamente no formato "con_XXX"
        - Status inicial √© 'UNAUTHORIZED'
        - Expira√ß√£o padr√£o de 1 ano
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
            examples:
              consentimentoBasico:
                summary: Consentimento b√°sico para leitura
                value:
                  customer: "cus_001"
                  permissions: ["ACCOUNTS_READ", "BALANCES_READ"]
                  currentAccount: "acc_001"
              consentimentoCompleto:
                summary: Consentimento completo
                value:
                  customer: "cus_001"
                  permissions: ["ACCOUNTS_READ", "BALANCES_READ", "TRANSACTIONS_READ"]
                  currentAccount: "acc_001"
                  sourceAccounts: ["acc_001", "acc_002"]
                  expirationDateTime: "2025-06-15T10:30:00Z"
      responses:
        '201':
          description: Consentimento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Cliente ou conta n√£o encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags: [Consents]
      summary: Listar consentimentos
      description: |
        Retorna uma lista paginada de todos os consentimentos.
        
        **Funcionalidades:**
        - Suporte √† pagina√ß√£o autom√°tica
        - Filtros por status e cliente
        - Ordena√ß√£o por data de cria√ß√£o
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N√∫mero da p√°gina desejada
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: N√∫mero de itens por p√°gina
        - in: query
          name: status
          schema:
            type: string
            enum: ['AUTHORIZED', 'REVOKED', 'UNAUTHORIZED']
          description: Filtrar por status do consentimento
      responses:
        '200':
          description: Lista de consentimentos recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Consent'
                  totalDocs:
                    type: integer
                  limit:
                    type: integer
                  totalPages:
                    type: integer
                  page:
                    type: integer
                  pagingCounter:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevPage:
                    type: integer
                    nullable: true
                  nextPage:
                    type: integer
                    nullable: true
        '500':
          $ref: '#/components/responses/InternalServerError'

  /consents/{id}:
    get:
      tags: [Consents]
      summary: Buscar consentimento por ID
      description: |
        Retorna os dados completos de um consentimento espec√≠fico pelo ID.
        
        **Funcionalidades:**
        - Busca pelo ID customizado (formato: con_XXX)
        - Inclui informa√ß√µes do cliente e contas
        - Status atual e permiss√µes concedidas
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^con_[0-9]{3}$'
          description: ID √∫nico do consentimento
          example: "con_001"
      responses:
        '200':
          description: Consentimento encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags: [Consents]
      summary: Atualizar consentimento
      description: |
        Atualiza o status ou permiss√µes de um consentimento espec√≠fico.
        
        **Funcionalidades:**
        - Alterar status (AUTHORIZED, REVOKED, UNAUTHORIZED)
        - Modificar permiss√µes concedidas
        - Atualizar data de expira√ß√£o
        - Alterar contas autorizadas
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^con_[0-9]{3}$'
          description: ID √∫nico do consentimento
          example: "con_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ['AUTHORIZED', 'REVOKED', 'UNAUTHORIZED']
                permissions:
                  type: array
                  items:
                    type: string
                    enum: ['ACCOUNTS_READ', 'BALANCES_READ', 'TRANSACTIONS_READ']
                expirationDateTime:
                  type: string
                  format: date-time
                sourceAccounts:
                  type: array
                  items:
                    type: string
            examples:
              autorizar:
                summary: Autorizar consentimento
                value:
                  status: "AUTHORIZED"
              revogar:
                summary: Revogar consentimento
                value:
                  status: "REVOKED"
              atualizarPermissoes:
                summary: Atualizar permiss√µes
                value:
                  permissions: ["ACCOUNTS_READ", "BALANCES_READ", "TRANSACTIONS_READ"]
                  expirationDateTime: "2025-12-31T23:59:59Z"
      responses:
        '200':
          description: Consentimento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags: [Consents]
      summary: Excluir consentimento
      description: |
        Remove um consentimento do sistema permanentemente.
        
        **‚ö†Ô∏è ATEN√á√ÉO:**
        - Esta opera√ß√£o √© **irrevers√≠vel**
        - Todos os acessos baseados neste consentimento ser√£o revogados
        - Recomenda-se alterar o status para 'REVOKED' ao inv√©s de excluir
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^con_[0-9]{3}$'
          description: ID √∫nico do consentimento a ser exclu√≠do
          example: "con_001"
      responses:
        '200':
          description: Consentimento exclu√≠do com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Consentimento exclu√≠do com sucesso"
                  deletedConsent:
                    $ref: '#/components/schemas/Consent'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'